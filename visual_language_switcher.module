<?php
/**
 * @file visual_language_switcher.module
 * Visual Language Switcher with FamFamFam flags for Backdrop CMS.
 */

/**
 * Implements hook_config_info().
 */
function visual_language_switcher_config_info() {
  $prefixes['visual_language_switcher.settings'] = array(
    'label' => t('Visual Language Switcher settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_menu().
 */
function visual_language_switcher_menu() {
  $items = array();
  
  $items['admin/config/regional/visual-language-switcher'] = array(
    'title' => 'Visual Language Switcher',
    'description' => 'Configure Visual Language Switcher with flags.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('visual_language_switcher_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'visual_language_switcher.admin.inc',
  );
  
  return $items;
}

/**
 * Implements hook_block_info().
 */
function visual_language_switcher_block_info() {
  $blocks = array();
  
  $blocks['language_switcher'] = array(
    'info' => t('Visual Language Switcher'),
    'description' => t('Displays language switcher with country flags.'),
    'cache' => BACKDROP_CACHE_GLOBAL,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function visual_language_switcher_block_view($delta = '') {
  $block = array();
  
  if ($delta == 'language_switcher') {
    $block['subject'] = NULL;
    $block['content'] = visual_language_switcher_block_content();
  }
  
  return $block;
}

/**
 * Block content callback.
 */
function visual_language_switcher_block_content() {
  $languages = language_list();
  
  if (empty($languages) || count($languages) <= 1) {
    return array();
  }
  
  $path = current_path();
  if (backdrop_is_front_page()) {
    $path = '<front>';
  }
  
  $links = array();
  $current_language = $GLOBALS['language']->langcode;
  
  // Get display settings with proper config
  $config = config('visual_language_switcher.settings');
  $display_mode = $config->get('display_mode');
  if (empty($display_mode)) {
    $display_mode = 'flag_with_name';
  }
  
  // Flag mapping
  $flag_map = visual_language_switcher_get_flag_mapping();
  
  foreach ($languages as $langcode => $language) {
    $flag = isset($flag_map[$langcode]) ? $flag_map[$langcode] : $langcode;
    $flag_img = '<img src="' . base_path() . backdrop_get_path('module', 'visual_language_switcher') . '/flags/' . $flag . '.png" alt="' . $language->name . '" title="' . $language->name . '" class="language-flag" />';
    
    // Build title based on display mode
    switch ($display_mode) {
      case 'only_flag':
        $title = $flag_img;
        break;
      
      case 'only_name':
        $title = $language->native;
        break;
      
      case 'flag_with_name':
      default:
        $title = $flag_img . ' <span class="language-name">' . $language->native . '</span>';
        break;
    }
    
    $links[$langcode] = array(
      'title' => $title,
      'href' => $path,
      'language' => $language,
      'html' => TRUE,
      'attributes' => array(
        'class' => array('language-link', 'language-link-' . $langcode, 'display-mode-' . $display_mode),
      ),
    );
    
    if ($langcode == $current_language) {
      $links[$langcode]['attributes']['class'][] = 'active';
    }
  }
  
  $output = array(
    '#theme' => 'links__language_block',
    '#links' => $links,
    '#attributes' => array('class' => array('visual-language-switcher')),
  );
  
  // Add CSS
  backdrop_add_css(backdrop_get_path('module', 'visual_language_switcher') . '/css/visual_language_switcher.css');
  
  return $output;
}

/**
 * Get flag mapping for language codes.
 */
function visual_language_switcher_get_flag_mapping() {
  return array(
    'en' => 'gb',
    'en-us' => 'us',
    'en-gb' => 'gb',
    'de' => 'de',
    'fr' => 'fr',
    'es' => 'es',
    'it' => 'it',
    'pt' => 'pt',
    'pt-br' => 'br',
    'nl' => 'nl',
    'ru' => 'ru',
    'pl' => 'pl',
    'ja' => 'jp',
    'zh-hans' => 'cn',
    'zh-hant' => 'tw',
    'ar' => 'sa',
    'tr' => 'tr',
    'sv' => 'se',
    'da' => 'dk',
    'no' => 'no',
    'fi' => 'fi',
    'cs' => 'cz',
    'hu' => 'hu',
    'ro' => 'ro',
    'el' => 'gr',
    'he' => 'il',
    'th' => 'th',
    'ko' => 'kr',
    'vi' => 'vn',
    'id' => 'id',
    'uk' => 'ua',
    'bg' => 'bg',
    'hr' => 'hr',
    'sk' => 'sk',
    'sl' => 'si',
    'lt' => 'lt',
    'lv' => 'lv',
    'et' => 'ee',
  );
}
